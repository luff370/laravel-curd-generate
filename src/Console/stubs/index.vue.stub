<template>
  <div>
    <div class="i-layout-page-header">
      <div class="i-layout-page-header">
        <span class="ivu-page-header-title">{{ $route.meta.title }}</span>
        <div>
          <!-- <Tabs @on-click="onClickTab">
            <TabPane :label="item.label" :name="(item.value).toString()" v-for="(item, index) in appsList" :key="index" />
          </Tabs> -->
        </div>
      </div>
    </div>
    <Card :bordered="false" dis-hover class="ivu-mt">
      <Form ref="filter" :label-width="labelWidth" :label-position="labelPosition" @submit.native.prevent>
        <Row type="flex" :gutter="24">
DummyFilterForm
          <Col v-bind="grid" class="ivu-text-left">
            <FormItem label="创建时间：">
              <DatePicker
                :editable="false"
                @on-change="onchangeTime"
                :value="timeVal"
                format="yyyy/MM/dd HH:mm:ss"
                type="datetimerange"
                placement="bottom-start"
                placeholder="请选择时间范围"
                style="width: 300px"
                class="mr20"
                :options="options"
              ></DatePicker>
            </FormItem>
          </Col>
          <Col v-bind="grid">
            <FormItem label="搜索：" prop="keyword" label-for="keyword">
              <Input search enter-button placeholder="输入名称、关键字" v-model="filter.keyword" @on-search="search"/>
            </FormItem>
          </Col>
        </Row>
        <Row type="flex">
          <Col v-bind="grid">
            <Button v-auth="['DummyNamespace-DummyModelSnakeName']" type="primary" icon="md-add" @click="add">添加</Button>
          </Col>
        </Row>
      </Form>
      <Table
        :columns="columns1"
        :data="tableList"
        :loading="loading"
        class="mt25"
        highlight-row
        no-userFrom-text="暂无数据"
        no-filtered-userFrom-text="暂无筛选结果"
      >
        <template slot-scope="{ row }" slot="is_enable">
          <div>
            <Tag v-if="row.is_enable===1" color="success">启用</Tag>
            <Tag v-else color="error">停用</Tag>
          </div>
        </template>
        <template slot-scope="{ row, index }" slot="app_info">
          <div>{{ row.app_name }}</div>
          <div><tag color="orange">{{ row.app_id }}</tag></div>
        </template>
        <template slot-scope="{ row }" slot="image">
          <div class="tabBox_img" v-viewer>
            <img v-lazy="row.image" />
          </div>
        </template>
        <template slot-scope="{ row, index }" slot="status">
          <i-switch
            v-model="row.status"
            :value="row.status"
            :true-value="1"
            :false-value="0"
            @on-change="setFieldData(row.id,row.status,'status')"
            size="large"
          >
            <span slot="open">启用</span>
            <span slot="close">停用</span>
          </i-switch>
        </template>

        <template slot-scope="{ row, index }" slot="action">
          <a @click="edit(row)">编辑</a>
          <Divider type="vertical"/>
          <a @click="del(row, '删除DummyTitle', index)">删除</a>
        </template>
      </Table>
      <div class="acea-row row-right page">
        <Page :total="total" :current="filter.page" show-elevator show-total @on-change="pageChange" :page-size="filter.limit"/>
      </div>
    </Card>
  </div>
</template>
<script>
import {mapState} from 'vuex';
import {DummyModelNameAddApi, DummyModelNameEditApi, DummyModelNameListApi, DummyModelNameSetFieldApi} from '@/api/DummyNamespace';
import {selectFormListApi} from '@/api/common';

export default {
  name: 'DummyModelName',
  data() {
    return {
      grid: {
        xl: 7,
        lg: 7,
        md: 12,
        sm: 24,
        xs: 24,
      },
      loading: false,
      filter: {
        app_id: '',
DummyFilterFields
        keyword: '',
        page: 1,
        limit: 20,
      },
      columns1: [
DummyColumns
        {
          title: '操作',
          slot: 'action',
          fixed: 'right',
          minWidth: 100,
        },
      ],
      total: 0,
      tableList: [],
      appsList: [],
      timeVal: [],
      options:{
        shortcuts: [
          {
            text: '今天',
            value() {
              const end = new Date();
              const start = new Date();
              start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()));
              return [start, end];
            },
          },
          {
            text: '昨天',
            value() {
              const end = new Date();
              const start = new Date();
              start.setTime(
                start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 1)),
              );
              end.setTime(
                end.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 1)),
              );
              return [start, end];
            },
          },
          {
            text: '最近7天',
            value() {
              const end = new Date();
              const start = new Date();
              start.setTime(
                start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 6)),
              );
              return [start, end];
            },
          },
          {
            text: '最近30天',
            value() {
              const end = new Date();
              const start = new Date();
              start.setTime(
                start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 29)),
              );
              return [start, end];
            },
          },
          {
            text: '本月',
            value() {
              const end = new Date();
              const start = new Date();
              start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), 1)));
              return [start, end];
            },
          },
          {
            text: '本年',
            value() {
              const end = new Date();
              const start = new Date();
              start.setTime(start.setTime(new Date(new Date().getFullYear(), 0, 1)));
              return [start, end];
            },
          },
        ],
      },
    };
  },
  computed: {
    ...mapState('media', ['isMobile']),
    labelWidth() {
      return this.isMobile ? undefined : 75;
    },
    labelPosition() {
      return this.isMobile ? 'top' : 'right';
    },
  },
  mounted() {
    this.getList();
    this.getOptions();
  },
  methods: {
    getOptions() {
      selectFormListApi('system_apps').then(async (res) => {
        this.appsList = res.data;
      });
    },
    // 添加
    add() {
      let params = {
        'app_id': this.filter.app_id,
      };
      this.$modalForm(DummyModelNameAddApi(params)).then(() => this.getList());
    },
    // 编辑
    edit(row) {
      this.$modalForm(DummyModelNameEditApi(row.id)).then(() => this.getList());
    },
    // 删除
    del(row, tit) {
      let delFormData = {
        title: tit,
        num: 0,
        url: `DummyNamespace/DummyModelSnakeName/${row.id}`,
        method: 'DELETE',
        ids: '',
      };
      this.$modalSure(delFormData).then((res) => {
        this.$Message.success(res.msg);
        this.getList();
      }).catch((res) => {
        this.$Message.error(res.msg);
      });
    },
    // 列表
    getList() {
      this.loading = true;
      DummyModelNameListApi(this.filter).then(async (res) => {
        let data = res.data;
        this.tableList = data.list;
        this.total = data.count;
        this.loading = false;
      }).catch((res) => {
        this.loading = false;
        this.$Message.error(res.msg);
      });
    },
    onClickTab(app_id) {
      this.filter.page = 1;
      this.filter.app_id = app_id;
      this.getList();
    },
    pageChange(index) {
      this.filter.page = index;
      this.getList();
    },
    // 表格搜索
    search() {
      this.filter.page = 1;
      this.getList();
    },
    onchangeTime(e) {
      this.filter.page = 1;
      this.timeVal = e;
      this.filter.time = this.timeVal[0] ? this.timeVal.join('-') : '';
      this.getList();
    },
    // 更新某个字段值
    setFieldData(id, value, field) {
      DummyModelNameSetFieldApi(id, value, field).then(async (res) => {
        this.$Message.success(res.msg);
      }).catch((res) => {
        this.$Message.error(res.msg);
      });
    },
  },
};
</script>

<style scoped lang="stylus">
.tabBox_img {
  width: 36px;
  height: 36px;
  border-radius: 4px;
  cursor: pointer;

img {
  width: 100%;
  height: 100%;
}

}
</style>
